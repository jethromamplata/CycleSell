using Manager;
using SampleManager.Services;
using static Model.UserModel;
namespace Manager.UserManager
{
    public class UserManager : IUserService
    {
        //Temporary data for testing before database connections
        private readonly List<User> _user = new List<User>
        {
            new User { Id = 1, UserName = "Janver", Age = 18, Email = "Janver@yahoo.com" },
            new User { Id = 2, UserName = "Bryan", Age = 19, Email = "Bryan@yahoo.com" }
        };
        //Function that displays all students within the list
        public IEnumerable<User> GetAllUser()
        {
            return _user;
        }
        //Function to display the details of the student if there is a matching Id
        public User GetUserById(int id)
        {
            return _user.FirstOrDefault(s => s.Id == id);
        }
        //Function that displays adds a students to the list
        public void AddUser(User user)
        {
            user.Id = _user.Max(s => s.Id) + 1;
            _user.Add(user);
        }
        //Function that update a student's information if it exists
        public void UpdateUser(int id, User user)
        {
            var existingUser = _user.FirstOrDefault(s => s.Id == id);
            if (existingUser != null)
            {
                existingUser.UserName = user.UserName;
                existingUser.Age = user.Age;
                existingUser.Email = user.Email;
            }
        }
        //Function that deletes a student from the list
        public void DeleteUser(int id)
        {
            var user = _user.FirstOrDefault(s => s.Id == id);
            if (user != null)
            {
                _user.Remove(user);
            }
        }
    }
}
